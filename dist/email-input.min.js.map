{"version":3,"sources":["email-storage.js","email-input.js"],"names":["EmailStorage","emails","data","event","callback","subscribers","push","length","forEach","cb","pos","removedItem","splice","trigger","dataToAppend","map","item","value","valid","isValid","newEmails","email","some","current","re","test","String","toLowerCase","global","createSelectionContainer","selectionContainer","document","createElement","classList","add","createList","listNode","createListItem","listItem","createEmailInput","placeholder","inputField","setAttribute","createHidden","createEmailItem","emailNode","textContent","removeIcon","appendChild","replaceEmails","childNodes","removeChild","firstChild","emailItemsFragment","reduce","acc","emailItem","createDocumentFragment","insertBefore","lastChild","removeEmail","position","appendEmails","defaultOptions","initialEmails","onListChange","EmailInput","element","options","emailsList","emailInput","resultHidden","on","addedEmails","getEmails","join","addEventListener","e","target","contains","parentElement","removedItemIndex","children","indexOf","remove","slice","exists","append","input","clipboardData","getData","pastedEmails","split","trim","preventDefault","replace","window"],"mappings":"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","file":"email-input.min.js","sourceRoot":"../src","sourcesContent":["class EmailStorage {\n  subscribers = {};\n\n  constructor(emails = []) {\n    this.data = emails;\n  }\n\n  on(event, callback) {\n    if (!this.subscribers[event]) {\n      this.subscribers[event] = [];\n    }\n\n    this.subscribers[event].push(callback);\n  }\n\n  trigger(event, ...data) {\n    if (this.subscribers[event] && this.subscribers[event].length > 0) {\n      this.subscribers[event].forEach((cb) => cb(...data));\n    }\n  }\n\n  remove(pos) {\n    const removedItem = this.data.splice(pos, 1);\n    this.trigger(\"remove\", removedItem, pos, this.data);\n  }\n\n  append(...emails) {\n    const dataToAppend = emails.map((item) => {\n      return { value: item, valid: this.isValid(item) };\n    });\n    this.data.push(...dataToAppend);\n    this.trigger(\"append\", dataToAppend, this.data);\n  }\n\n  replace(newEmails) {\n    this.data = newEmails.map((item) => {\n      return { value: item, valid: this.isValid(item) };\n    });\n\n    this.trigger(\"replace\", this.data);\n  }\n\n  exists(email) {\n    return this.data.some((current) => current.value === email);\n  }\n\n  isValid(email) {\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n}\n\nexport default EmailStorage;\n","import \"./email-input.scss\";\n\nimport EmailStorage from './email-storage';\n\n((global) => {\n  const createSelectionContainer = () => {\n    const selectionContainer = document.createElement(\"div\");\n    selectionContainer.classList.add(\"email-input\");\n\n    return selectionContainer;\n  };\n\n  const createList = () => {\n    const listNode = document.createElement(\"ul\");\n    listNode.classList.add(\"email-input__list\");\n\n    return listNode;\n  };\n\n  const createListItem = () => {\n    const listItem = document.createElement(\"li\");\n    listItem.classList.add(\"email-input__item\");\n\n    return listItem;\n  };\n\n  const createEmailInput = (placeholder) => {\n    const inputField = document.createElement(\"input\");\n    inputField.classList.add(\"email-input__input\");\n\n    inputField.setAttribute(\"type\", \"text\");\n    inputField.setAttribute(\"placeholder\", placeholder);\n\n    return inputField;\n  };\n\n  const createHidden = () => {\n    const inputField = document.createElement(\"input\");\n    inputField.setAttribute(\"type\", \"hidden\");\n    inputField.value = '';\n\n    return inputField;\n  }\n\n  const createEmailItem = (email) => {\n    const emailNode = createListItem();\n    emailNode.classList.add(\"email-input__item--email\");\n    emailNode.textContent = email.value;\n\n    if (!email.valid) {\n      emailNode.classList.add(\"email-input__item--invalid\");\n    }\n\n    const removeIcon = document.createElement(\"span\");\n    removeIcon.classList.add(\"email-input__remove\");\n    removeIcon.setAttribute(\"title\", \"Remove this email\");\n    removeIcon.textContent = \"x\";\n\n    emailNode.appendChild(removeIcon);\n\n    return emailNode;\n  };\n\n  const replaceEmails = (listNode, emails) => {\n    while (listNode.childNodes.length > 1) {\n      listNode.removeChild(listNode.firstChild);\n    }\n\n    const emailItemsFragment = emails.reduce((acc, email) => {\n      const emailItem = createEmailItem(email);\n\n      acc.appendChild(emailItem);\n      return acc;\n    }, document.createDocumentFragment());\n\n    listNode.insertBefore(emailItemsFragment, listNode.lastChild);\n  };\n\n  const removeEmail = (listNode, position) => {\n    listNode.removeChild(listNode.childNodes[position]);\n  };\n\n  const appendEmails = (listNode, emails) => {\n    const emailItemsFragment = emails.reduce((acc, email) => {\n      const emailItem = createEmailItem(email);\n\n      acc.appendChild(emailItem);\n      return acc;\n    }, document.createDocumentFragment());\n\n    listNode.insertBefore(emailItemsFragment, listNode.lastChild);\n  };\n\n  const defaultOptions = {\n    placeholder: \"Add more\",\n    initialEmails: [],\n    onListChange: null,\n  };\n\n  class EmailInput {\n    emails = new EmailStorage();\n\n    constructor(element, options = {}) {\n      this.element = element;\n\n      options = { ...defaultOptions, ...options };\n\n      const emailsList = createList();\n      const emailInput = createEmailInput(options.placeholder);\n      const resultHidden = createHidden();\n\n      const listItem = createListItem();\n      listItem.classList.add(\"email-input__item--input\");\n      listItem.appendChild(emailInput);\n\n      emailsList.appendChild(listItem);\n\n      const selectionContainer = createSelectionContainer();\n      selectionContainer.appendChild(emailsList);\n      selectionContainer.appendChild(resultHidden);\n\n      this.element.appendChild(selectionContainer);\n\n      const handleClick = (e) => {\n        if (e.target.classList.contains(\"email-input__remove\")) {\n          const listItem = e.target.parentElement;\n          const removedItemIndex = [...listItem.parentElement.children].indexOf(\n            listItem\n          );\n\n          this.emails.remove(removedItemIndex);\n        }\n      };\n\n      const handleInput = (e) => {\n        if (e.data === \",\") {\n          const email = e.target.value.slice(0, -1);\n\n          if (email.length === 0) {\n            return;\n          }\n\n          if (!this.emails.exists(email)) {\n            this.emails.append(email);\n          }\n\n          emailInput.value = \"\";\n        }\n      };\n\n      const handleFocusOut = (e) => {\n        if (e.target.classList.contains(\"email-input__input\")) {\n          const email = e.target.value;\n\n          if (email.length > 0) {\n            if (!this.emails.exists(email)) {\n              this.emails.append(email);\n            }\n\n            emailInput.value = \"\";\n          }\n        }\n      };\n\n      const handlePaste = (e) => {\n        const input = e.clipboardData.getData(\"text/plain\");\n\n        if (input.length > 0) {\n          const pastedEmails = input.split(\",\").reduce((acc, item) => {\n            const email = item.trim();\n\n            if (email.length > 0 && !this.emails.exists(email)) {\n              acc.push(email);\n            }\n\n            return acc;\n          }, []);\n\n          this.emails.append(...pastedEmails);\n\n          e.preventDefault();\n        }\n      };\n\n      if (options.onListChange) {\n        this.onListChange = options.onListChange;\n      }\n\n      this.emails.on(\"append\", (addedEmails) => {\n        appendEmails(emailsList, addedEmails);\n        resultHidden.value = this.getEmails().join(',');\n      });\n\n      this.emails.on(\"remove\", (removedItem, position) => {\n        removeEmail(emailsList, position);\n        resultHidden.value = this.getEmails().join(',');\n      });\n\n      this.emails.on(\"replace\", (emails) => {\n        replaceEmails(emailsList, emails);\n        resultHidden.value = this.getEmails().join(',');\n      });\n\n      selectionContainer.addEventListener(\"click\", handleClick);\n      selectionContainer.addEventListener(\"input\", handleInput);\n      selectionContainer.addEventListener(\"focusout\", handleFocusOut);\n      selectionContainer.addEventListener(\"paste\", handlePaste);\n    }\n\n    getEmails() {\n      return this.emails.data.map((item) => item.value);\n    }\n\n    setEmails(emails) {\n      this.emails.replace(emails);\n    }\n  }\n\n  global.EmailInput = EmailInput;\n})(window);\n"]}