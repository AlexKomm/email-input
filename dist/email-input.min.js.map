{"version":3,"sources":["utils.js","email-input.js"],"names":["isEmailValid","email","re","test","String","toLowerCase","global","createSelectionContainer","selectionContainer","document","createElement","classList","add","createList","listNode","createListItem","listItem","createEmailInput","placeholder","inputField","setAttribute","createEmailItem","emailNode","textContent","value","valid","removeIcon","appendChild","removeEmail","position","removeChild","childNodes","appendEmails","emails","emailItemsFragment","reduce","acc","emailItem","createDocumentFragment","insertBefore","lastChild","isEmailAlreadyAdded","existingEmails","some","current","defaultOptions","initialEmails","onListChange","EmailInput","element","options","emailsList","emailInput","setEmails","addEventListener","e","target","contains","parentElement","removedItemIndex","children","indexOf","splice","data","slice","length","emailRecord","push","input","clipboardData","getData","pastedEmails","split","item","trim","preventDefault","map","firstChild","replaceEmails","querySelector","window"],"mappings":"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","file":"email-input.min.js","sourceRoot":"../src","sourcesContent":["export const isEmailValid = (email) => {\n  var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n};\n","import \"./email-input.scss\";\n\nimport { isEmailValid } from \"./utils\";\n\n((global) => {\n  const createSelectionContainer = () => {\n    const selectionContainer = document.createElement(\"div\");\n    selectionContainer.classList.add(\"email-input\");\n\n    return selectionContainer;\n  };\n\n  const createList = () => {\n    const listNode = document.createElement(\"ul\");\n    listNode.classList.add(\"email-input__list\");\n\n    return listNode;\n  };\n\n  const createListItem = () => {\n    const listItem = document.createElement(\"li\");\n    listItem.classList.add(\"email-input__item\");\n\n    return listItem;\n  };\n\n  const createEmailInput = (placeholder) => {\n    const inputField = document.createElement(\"input\");\n    inputField.classList.add(\"email-input__input\");\n\n    inputField.setAttribute(\"type\", \"text\");\n    inputField.setAttribute(\"placeholder\", placeholder);\n\n    return inputField;\n  };\n\n  const createEmailItem = (email) => {\n    const emailNode = createListItem();\n    emailNode.classList.add(\"email-input__item--email\");\n    emailNode.textContent = email.value;\n\n    if (!email.valid) {\n      emailNode.classList.add(\"email-input__item--invalid\");\n    }\n\n    const removeIcon = document.createElement(\"span\");\n    removeIcon.classList.add(\"email-input__remove\");\n    removeIcon.setAttribute(\"title\", \"Remove this email\");\n    removeIcon.textContent = \"x\";\n\n    emailNode.appendChild(removeIcon);\n\n    return emailNode;\n  };\n\n  const replaceEmails = (listNode, emails) => {\n    while (listNode.childNodes.length > 1) {\n      listNode.removeChild(listNode.firstChild);\n    }\n\n    const emailItemsFragment = emails.reduce((acc, email) => {\n      const emailItem = createEmailItem(email);\n\n      acc.appendChild(emailItem);\n      return acc;\n    }, document.createDocumentFragment());\n\n    listNode.insertBefore(emailItemsFragment, listNode.lastChild);\n  };\n\n  const removeEmail = (listNode, position) => {\n    listNode.removeChild(listNode.childNodes[position]);\n  };\n\n  const appendEmails = (listNode, ...emails) => {\n    const emailItemsFragment = emails.reduce((acc, email) => {\n      const emailItem = createEmailItem(email);\n\n      acc.appendChild(emailItem);\n      return acc;\n    }, document.createDocumentFragment());\n\n    listNode.insertBefore(emailItemsFragment, listNode.lastChild);\n  };\n\n  const isEmailAlreadyAdded = (email, existingEmails) => {\n    return existingEmails.some((current) => current.value === email);\n  };\n\n  const defaultOptions = {\n    placeholder: \"Add more\",\n    initialEmails: [],\n    onListChange: null,\n  };\n\n  class EmailInput {\n    onListChange;\n\n    emails = [];\n\n    constructor(element, options = {}) {\n      this.element = element;\n\n      options = { ...defaultOptions, ...options };\n\n      if (options.onListChange) {\n        this.onListChange = options.onListChange;\n      }\n\n      const emailsList = createList();\n      const emailInput = createEmailInput(options.placeholder);\n\n      const listItem = createListItem();\n      listItem.classList.add(\"email-input__item--input\");\n      listItem.appendChild(emailInput);\n\n      emailsList.appendChild(listItem);\n\n      const selectionContainer = createSelectionContainer();\n      selectionContainer.appendChild(emailsList);\n\n      this.element.appendChild(selectionContainer);\n\n      this.setEmails(...options.initialEmails);\n\n      const handleClick = (e) => {\n        if (e.target.classList.contains(\"email-input__remove\")) {\n          const listItem = e.target.parentElement;\n          const removedItemIndex = [...listItem.parentElement.children].indexOf(\n            listItem\n          );\n\n          this.emails.splice(removedItemIndex, 1);\n          removeEmail(emailsList, removedItemIndex);\n\n          if (this.onListChange) {\n            this.onListChange(this.emails);\n          }\n        }\n      };\n\n      const handleInput = (e) => {\n        if (e.data === \",\") {\n          const email = e.target.value.slice(0, -1);\n\n          if (email.length === 0) {\n            return;\n          }\n\n          if (!isEmailAlreadyAdded(email, this.emails)) {\n            const emailRecord = { value: email, valid: isEmailValid(email) };\n\n            this.emails.push(emailRecord);\n            appendEmails(emailsList, emailRecord);\n\n            if (this.onListChange) {\n              this.onListChange(this.emails);\n            }\n          }\n\n          emailInput.value = \"\";\n        }\n      };\n\n      const handleFocusOut = (e) => {\n        if (e.target.classList.contains(\"email-input__input\")) {\n          const email = e.target.value;\n\n          if (email.length > 0) {\n            if (!isEmailAlreadyAdded(email, this.emails)) {\n              const emailRecord = { value: email, valid: isEmailValid(email) };\n\n              this.emails.push(emailRecord);\n              appendEmails(emailsList, emailRecord);\n\n              if (this.onListChange) {\n                this.onListChange(this.emails);\n              }\n            }\n\n            emailInput.value = \"\";\n          }\n        }\n      };\n\n      const handlePaste = (e) => {\n        const input = e.clipboardData.getData(\"text/plain\");\n\n        if (input.length > 0) {\n          const pastedEmails = input.split(\",\").reduce((acc, item) => {\n            const email = item.trim();\n\n            if (email.length > 0 && !isEmailAlreadyAdded(email, this.emails)) {\n              acc.push({ value: email, valid: isEmailValid(email) });\n            }\n\n            return acc;\n          }, []);\n\n          this.emails.push(...pastedEmails);\n          appendEmails(emailsList, ...pastedEmails);\n\n          e.preventDefault();\n\n          if (this.onListChange) {\n            this.onListChange(this.emails);\n          }\n        }\n      };\n\n      selectionContainer.addEventListener(\"click\", handleClick);\n      selectionContainer.addEventListener(\"input\", handleInput);\n      selectionContainer.addEventListener(\"focusout\", handleFocusOut);\n      selectionContainer.addEventListener(\"paste\", handlePaste);\n    }\n\n    setEmails(...emails) {\n      this.emails = emails.map((email) => {\n        return { value: email, valid: isEmailValid(email) };\n      });\n\n      const list = this.element.querySelector(\".email-input__list\");\n      replaceEmails(list, this.emails);\n\n      if (this.onListChange) {\n        this.onListChange(this.emails);\n      }\n\n      return this;\n    }\n  }\n\n  global.EmailInput = EmailInput;\n})(window);\n"]}